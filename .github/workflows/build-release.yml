name: Build and Release

# Trigger on pushes to main branch
on:
  push:
    branches:
      - main

jobs:
  build-and-release:
    name: Build and Release Extension
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Build extension
        run: npm run package

      - name: Install vsce
        run: npm install -g @vscode/vsce

      - name: Package extension
        run: vsce package --out lsp-mcp-bridge.vsix

      - name: Get version from package.json
        id: package-version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Get commit count since last tag
        id: commit-count
        run: |
          # Get the latest tag
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          if [ -z "$LATEST_TAG" ]; then
            # No tags exist, count all commits
            COUNT=$(git rev-list --count HEAD)
          else
            # Count commits since the latest tag
            COUNT=$(git rev-list --count ${LATEST_TAG}..HEAD)
          fi
          echo "count=$COUNT" >> $GITHUB_OUTPUT

      - name: Generate changelog
        id: changelog
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          if [ -z "$LATEST_TAG" ]; then
            # No tags exist, get all commit messages
            CHANGELOG=$(git log --pretty=format:"- %s (%h)" --no-merges)
          else
            # Get commits since the latest tag
            CHANGELOG=$(git log ${LATEST_TAG}..HEAD --pretty=format:"- %s (%h)" --no-merges)
          fi
          # Escape newlines for GitHub Actions output
          CHANGELOG="${CHANGELOG//'%'/'%25'}"
          CHANGELOG="${CHANGELOG//$'\n'/'%0A'}"
          CHANGELOG="${CHANGELOG//$'\r'/'%0D'}"
          echo "changelog=$CHANGELOG" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.package-version.outputs.version }}-build.${{ github.run_number }}
          release_name: Release v${{ steps.package-version.outputs.version }}-build.${{ github.run_number }}
          body: |
            ## Changes in this build

            ${{ steps.changelog.outputs.changelog }}

            ## Installation

            Download the `lsp-mcp-bridge.vsix` file and install it in VS Code:
            ```
            code --install-extension lsp-mcp-bridge.vsix
            ```

            Or manually: Extensions → Views and More Actions (•••) → Install from VSIX
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./lsp-mcp-bridge.vsix
          asset_name: lsp-mcp-bridge.vsix
          asset_content_type: application/zip

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: lsp-mcp-bridge-vsix
          path: lsp-mcp-bridge.vsix
          retention-days: 90
