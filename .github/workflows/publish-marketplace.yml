name: Publish to Marketplace

# Manual workflow to create a proper release and publish to VS Code Marketplace
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.2 - do not include "v" prefix)'
        required: true
        type: string

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Validate version format
        run: |
          if ! [[ "${{ inputs.version }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Error: Version must be in format X.Y.Z (e.g., 1.0.2)"
            exit 1
          fi

      - name: Install dependencies
        run: npm ci

      - name: Update package.json version
        run: |
          npm version ${{ inputs.version }} --no-git-tag-version
          echo "Updated package.json to version: ${{ inputs.version }}"

      - name: Lint
        run: npm run lint

      - name: Build extension
        run: npm run package

      - name: Run tests
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb
          Xvfb :99 -screen 0 1920x1080x24 > /dev/null 2>&1 &
          export DISPLAY=:99
          npm test

      - name: Install vsce
        run: npm install -g @vscode/vsce

      - name: Package extension
        run: vsce package --out lsp-mcp-bridge.vsix

      - name: Generate changelog
        id: changelog
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0 --match "v[0-9]*.[0-9]*.[0-9]*" 2>/dev/null || echo "")
          if [ -z "$LATEST_TAG" ]; then
            # No version tags exist, get all commit messages
            CHANGELOG=$(git log --pretty=format:"- %s (%h by %an)" --no-merges -30)
          else
            # Get commits since the latest version tag (excluding build tags)
            CHANGELOG=$(git log ${LATEST_TAG}..HEAD --pretty=format:"- %s (%h by %an)" --no-merges)
          fi
          
          # Handle empty changelog
          if [ -z "$CHANGELOG" ]; then
            CHANGELOG="- No changes since last release"
          fi
          
          # Escape special characters for GitHub Actions
          CHANGELOG="${CHANGELOG//'%'/'%25'}"
          CHANGELOG="${CHANGELOG//$'\n'/'%0A'}"
          CHANGELOG="${CHANGELOG//$'\r'/'%0D'}"
          echo "changelog=$CHANGELOG" >> $GITHUB_OUTPUT

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create "v${{ inputs.version }}" \
            --title "Release v${{ inputs.version }}" \
            --notes "## ðŸŽ‰ Release v${{ inputs.version }}
          
          **Published:** $(date -u '+%Y-%m-%d %H:%M:%S UTC')
          
          ## Changes in this release

          ${{ steps.changelog.outputs.changelog }}

          ## Installation

          ### From VS Code Marketplace
          Search for \"Language Server tools for Copilot\" in VS Code Extensions, or visit:
          https://marketplace.visualstudio.com/items?itemName=sehejjain.lsp-mcp-bridge

          ### Manual Installation
          Download the \`lsp-mcp-bridge.vsix\` file and install it in VS Code:
          \`\`\`bash
          code --install-extension lsp-mcp-bridge.vsix
          \`\`\`

          Or manually: Extensions â†’ â‹¯ (Views and More Actions) â†’ Install from VSIX" \
            lsp-mcp-bridge.vsix

      - name: Publish to VS Code Marketplace
        uses: HaaLeo/publish-vscode-extension@v2
        with:
          pat: ${{ secrets.VSCE_PAT }}
          registryUrl: https://marketplace.visualstudio.com
          packagePath: ./

      - name: Publish to Open VSX Registry
        uses: HaaLeo/publish-vscode-extension@v2
        with:
          pat: ${{ secrets.OPEN_VSX_TOKEN }}
          packagePath: ./
        continue-on-error: true

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: lsp-mcp-bridge-v${{ inputs.version }}
          path: lsp-mcp-bridge.vsix
          retention-days: 90
